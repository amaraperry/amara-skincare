[{"/Users/amaraperry/Desktop/project-skincare-proposal/src/index.js":"1","/Users/amaraperry/Desktop/project-skincare-proposal/src/App.js":"2","/Users/amaraperry/Desktop/project-skincare-proposal/src/ProductCards.js":"3","/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js":"4","/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizResults.js":"5","/Users/amaraperry/Desktop/project-skincare-proposal/src/homepage.js":"6","/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js":"7","/Users/amaraperry/Desktop/project-skincare-proposal/src/ProductComparison.js":"8"},{"size":286,"mtime":1645812989208,"results":"9","hashOfConfig":"10"},{"size":1060,"mtime":1646103359583,"results":"11","hashOfConfig":"10"},{"size":1751,"mtime":1646031376861,"results":"12","hashOfConfig":"10"},{"size":6016,"mtime":1646158095869,"results":"13","hashOfConfig":"10"},{"size":2095,"mtime":1646032996043,"results":"14","hashOfConfig":"10"},{"size":6797,"mtime":1646103361534,"results":"15","hashOfConfig":"10"},{"size":3229,"mtime":1646095451088,"results":"16","hashOfConfig":"10"},{"size":4643,"mtime":1646103119275,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hbsi68",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amaraperry/Desktop/project-skincare-proposal/src/index.js",[],[],"/Users/amaraperry/Desktop/project-skincare-proposal/src/App.js",["47","48","49","50","51"],[],"import React, { useState} from \"react\";\nimport { AllCards } from \"./ProductCards.js\";\nimport { SortFilter } from './SortFilter.js';\nimport _ from 'lodash';\nimport { QuizTopPicks } from './QuizResults.js';\nimport { Homepage, NavBar, Footer } from './homepage.js';\nimport QuizQuestions from './QuizQuestions.js';\nimport { ComparisonTable } from './ProductComparison.js';\n\n// props.data = the whole PRODUCTS_LIST json (array of objects)\nfunction App(props) {\n\n  // view data set is:\n  //console.log(props.data)\n\n  const [order, setOrder] = useState(props.data);\n\n  const applySort = (value) => {\n    let newArray = []\n    if (value === '') {\n      setOrder(props.data);\n    } else if (value === \"1\") {\n      setOrder(_.sortBy(props.data, ['price']))\n    } else if (value === \"2\") {\n      setOrder(newArray = _.reverse(_.sortBy(props.data, ['price'])))\n    }\n  }\n\nreturn (\n  <div className=\"container\">\n    <NavBar />\n    <SortFilter applySortCallback={applySort} data={props.data} />\n    <AllCards data={order} />\n    <Footer />\n  </div>\n);\n}\n\nexport default App;",["52","53"],"/Users/amaraperry/Desktop/project-skincare-proposal/src/ProductCards.js",[],[],"/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js",["54"],[],"import React, { useState } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\n\n\n// takes in entire props.data as props.data\nexport function SortFilter(props) {\n\n    const [valueSelected, setValueSelected] = useState(\"\");\n\n    const handleValue = (event) => {\n        let num = event.target.value;\n        if (num === \"\") {\n            num = \"\";\n        }\n        setValueSelected(num);\n        props.applySortCallback(num)\n    }\n\n\n    let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n\n    let categoryTitleArray = categories.map((title) => {\n        return (<h3 className=\"category\">{title}</h3>)\n    })\n\n    let typeArray = props.data.map((obj) => {\n        return obj.type;\n    })\n    let uniqueType = [...new Set(typeArray)]\n\n    let skinArray = props.data.map((obj) => {\n        return obj.skin;\n    })\n    let flattenSkin = [].concat(...skinArray)\n    let uniqueSkin = [...new Set(flattenSkin)]\n\n    let otherArray = props.data.map((obj) => {\n        return obj.other;\n    })\n    let flattenOther = [].concat(...otherArray)\n    let uniqueOther = [...new Set(flattenOther)]\n\n    let checkboxforEach = (array) => {\n        let typeCheckbox = array.map((item, index) => {\n            return (\n                <div className=\"form-check\" key={index}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n                    <label className=\"form-check-label\" htmlFor={item}>\n                        {item}\n                    </label>\n                </div>\n            )\n        })\n        return typeCheckbox\n    }\n\n    return (\n        <div>\n            <header className=\"text-center\">\n                <h1 className=\"page-header\">View the Award Winning Products List</h1>\n                <select className=\"form-select form-select-sm d-inline-block\" aria-label=\".form-select-sm example\"\n                    value={valueSelected} onChange={handleValue}>\n                    <option value=\"\">Sort</option>\n                    <option value=\"1\">Price ($ to $$$)</option>\n                    <option value=\"2\">Price ($$$ to $)</option>\n                </select>\n            </header>\n\n            <Accordion defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Filter Products</Accordion.Header>\n                    <Accordion.Body>\n                        <div className=\"check-container\">\n                        <div className=\"one-checkbox col-md-4\">\n                            {categoryTitleArray[0]}\n                            {checkboxforEach(uniqueType)}\n                        </div>\n                        <div className=\"one-checkbox col-md-4\">\n                            {categoryTitleArray[1]}\n                            {checkboxforEach(uniqueSkin)}\n                        </div>\n                        <div className=\"one-checkbox col-md-4\" >\n                            {categoryTitleArray[2]}\n                            {checkboxforEach(uniqueOther)}\n                        </div>\n                        </div>\n                        <button className=\"btn btn-outline-dark btn-sm submit\">Submit</button>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </div>\n\n    )\n\n}\n\n// concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\n// export function AllFilters(props) {\n\n//     const [checkbox, setCheckbox] = useState(false);\n\n//     let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n\n//     let categoryTitleArray = categories.map((title) => {\n//         return (<h3 className=\"category\">{title}</h3>)\n//     })\n\n//     let typeArray = props.data.map((obj) => {\n//         return obj.type;\n//     })\n//     let uniqueType = [...new Set(typeArray)]\n\n//     let skinArray = props.data.map((obj) => {\n//         return obj.skin;\n//     })\n//     let flattenSkin = [].concat(...skinArray)\n//     let uniqueSkin = [...new Set(flattenSkin)]\n\n\n//     let otherArray = props.data.map((obj) => {\n//         return obj.other;\n//     })\n//     let flattenOther = [].concat(...otherArray)\n//     let uniqueOther = [...new Set(flattenOther)]\n\n//     const handleCheckboxes = (event) => {\n//         let checked = event.target.checked;\n//         if (checked === true) {\n//             return setCheckbox(true);\n//         } else {\n//             return setCheckbox(false);\n//         }\n//     }\n\n//     let checkboxforEach = (array) => {\n//         let typeCheckbox = array.map((item, index) => {\n//             return (\n//                 <div className=\"form-check\" key={index}>\n//                     <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n//                     <label className=\"form-check-label\" htmlFor={item}>\n//                         {item}\n//                     </label>\n//                 </div>\n//             )\n//         })\n//         return typeCheckbox\n//     }\n\n//     return (\n\n//         <Accordion defaultActiveKey=\"0\" flush>\n//             <Accordion.Item eventKey=\"0\">\n//                 <Accordion.Header>Filter Products</Accordion.Header>\n//                 <Accordion.Body>\n//                     <div className=\"one-checkbox col-md-3\">\n//                         {categoryTitleArray[0]}\n//                         {checkboxforEach(uniqueType)}\n//                     </div>\n//                     <div className=\"one-checkbox col-md-3\">\n//                         {categoryTitleArray[1]}\n//                         {checkboxforEach(uniqueSkin)}\n//                     </div>\n//                     <div className=\"one-checkbox col-md-3\" >\n//                         {categoryTitleArray[2]}\n//                         {checkboxforEach(uniqueOther)}\n//                     </div>\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//         </Accordion>\n\n//     )\n// }\n","/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizResults.js",[],[],"/Users/amaraperry/Desktop/project-skincare-proposal/src/homepage.js",["55","56","57"],[],"import React from \"react\";\n\nexport function Homepage() {\n    return (\n        <div>\n        <NavBar />\n        <Header />\n        <Main />\n        <Footer />\n        </div>\n\n    )\n}\n\nexport function NavBar () {\n\n    const navData = [\n        { \"id\" : 1, \"name\" : \"Home\", \"url\" : \"\" },\n        { \"id\" : 2, \"name\" : \"Quiz\", \"url\" : \"\" },\n        { \"id\" : 3, \"name\" : \"Quiz Results\", \"url\" : \"\" },\n        { \"id\" : 4, \"name\" : \"Products\", \"url\" : \"\" },\n        { \"id\" : 5, \"name\" : \"Compare\", \"url\" : \"\" }\n    ]\n\n    const navInfo = navData.map((eachPage) => {\n        <li className=\"nav-item active\">\n            <a className=\"nav-link\" href={navData.url}>{navData.name} <span className=\"sr-only\"></span></a>\n        </li>\n    })\n\n    return (\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\n                <a className=\"navbar-brand\" href=\"#\"><img src=\"/img/logo.png\" height=\"40px\" alt=\"logo of honeydew\"/></a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        {navInfo}\n                    </ul>\n                </div>\n            </nav>\n    )\n}\n\n \nexport function Header () {\n    return (\n        <div>\n            <header className=\"homepage-header\">\n                <div className=\"container\">\n                    <h1 className=\"homepage-h1\">SkinCare</h1>\n                    <p className=\"lead\">Be confident of your skin.</p>\n                </div>\n            </header>\n        </div>\n    )\n}\n\n\nexport function Footer() {\n    return (\n        <div>\n            <footer>\n                <div className=\"container\">\n                    <p className=\"footer-contact\">Contact Us</p>\n                    <p><a href=\"mailto:skincare@honeydew.com\"><span className=\"material-icons\">email</span> skincare@honeydew.com</a></p>\n                    <p><a href=\"tel:206-765-4321\"><span class=\"material-icons\">phone</span> 206-765-4321</a></p>\n                    <p>&copy; Honeydew 2022</p>\n                </div>\n            </footer>\n        </div>\n\n    )\n}\n\n    // const stepData = [\n    //     {\"id\" : 1, \"name\" : \"Step 1\", \"image\" : \"img/quiz.jpeg\", \"alt\" : \"quiz\", \n    //     \"linkText1\" : \"Take self-assessment\", \"linkText2\" : \" quiz\", \"h3Text\" : \"to identify your skin condition.\",\n    //     \"pText\" : \"A thorough skin assessment gives you important information about potentially serious diseases, especiallyin older adults who are vulnerable to skin breakdown.\"},\n    //     {\"id\" : 2, \"name\" : \"Step 2\", \"image\" : \"img/search.png\", \"alt\" : \"a couple Allure 2021 winner products\", \n    //     \"linkText1\" : \"Take self-assessment\", \"linkText2\" : \" quiz\", \"h3Text\" : \"to identify your skin condition.\",\n    //     \"pText\" : \"A thorough skin assessment gives you important information about potentially serious diseases, especiallyin older adults who are vulnerable to skin breakdown.\"},\n\n    //     {}\n    // ]\n\n\nexport function Main () {\n\n    return (\n        <main>\n            <div class=\"container row HP-main\">\n    \n                {/* first step */}\n                <div class=\"paddings\">\n        \n                    <h2>Step 1</h2>\n                    <div class=\"row d-flex\">\n                        <div class=\"col-lg-6\">\n                            <img class=\"homepage-img\" src=\"/img/quiz.jpeg\" alt=\"quiz image\" />\n                        </div>\n            \n                        <div class=\"col-lg-6\">\n                            <h3>Take self-assessment<a class=\"homepage-a\" href=\"../project-skincare-proposal/quiz.html\"> quiz</a></h3>\n                            <h3>to identify your skin condition.</h3>\n                            <p>A thorough skin assessment gives you important information about potentially serious diseases, especially\n                            in older adults who are vulnerable to skin breakdown.</p>\n                        </div>\n                    </div>\n        \n                </div>\n        \n                {/* second step */}\n                <div class=\"paddings\">\n                    <h2>Step 2</h2>\n                    <div class=\"row d-flex\">\n                        <div class=\"col-lg-6\">\n                            <h3><a class=\"homepage-a\" href=\"../project-skincare-proposal/products.html\">Search</a> for suitable products.</h3>\n                            <p>Choose According To Your Skin. You can only seek out the best skin care products if you know your skin\n                            type. Thus, figuring out whether you have a normal, dry, oily, or sensitive skin is the first step on your\n                            journey of revamping your skincare regime. Then, use our tool to find out which product is best for you.\n                            </p>\n                        </div>\n            \n                        <div class=\"col-lg-6\">\n                            <img class=\"homepage-img\" src=\"/img/search.png\" alt=\"a couple Allure 2021 winner products\" />\n                        </div>\n                    </div>\n                </div>\n        \n        \n        \n                {/* third step */}\n                <div class=\"paddings\">\n        \n                    <h2 class=\"pb-3\">Step 3</h2>\n                    <div class=\"row d-flex\">\n                        <div class=\"col-lg-6\">\n                            <img class=\"homepage-img\" src=\"/img/compare.png\" alt=\"product comparison table\" />\n                        </div>\n                        <div class=\"col-lg-6\">\n            \n                            <h3><a class=\"homepage-a\" href=\"../project-skincare-proposal/productcompare.html\">Compare</a> the suggested products</h3>\n                            <h3>to identify your skin conditions.</h3>\n                            <p>Try to find different products for yourself. Comparison tool helps you learn directly about the\n                            differnces among products. Even if you are just looking to slow aging or alleviate dry skin, you could\n                            consider using multiple facial creams at different times of the day or week, including one that contains\n                            sunblock. If done correctly, you can get better results from your favorite creams by alternating\n                            additional products.</p>\n                        </div>\n                    </div>\n        \n                </div>\n        \n        \n                </div>\n  \n        </main>\n  \n    )\n}\n\n   ","/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js",["58","59","60","61","62","63","64","65"],[],"import { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\n\n\nexport default function QuizQuestions() {\n    const question = [\"What is your skin type?\", \"What is your price range?\", \"What type of treatment are you looking for?\", \"What type of products are you looking for?\"];\n\n    const options = [\n        [\"Oily\", \"Dry\", \"Combination\", \"Normal\"], \n        [\"$\", \"$$\", \"$$$\", \"$$$$\"], \n        [\"Moisturizer\", \"Cleanser\", \"Toner\", \"Serum\"],\n        [\"Paraben-free\", \"Fragrance-free\", \"Cruelty-free\", \"Vegan\", \"Hypoallergenic\"]\n    ];\n\n    const userInput = {\n        skin: '',\n        price: '',\n        treatment: '',\n        type: ''\n    };\n\n    //allChoices\n    const [choices, setChoices] = useState([]);\n    const [number, setQuestionNumber] = useState(1);\n    \n    const numberOfOptions = options.length;\n    const optionsDisplayed = options[choices -1];\n\n    //setting the question displayed\n    const numberOfQuestion = question.length;\n    const questionDisplayed = question[number - 1];\n    \n    \n    let allOptionsArray = options.map((option) => {\n        return <button className=\"qb btn btn-outline-dark btn-md\" key={option}>{option}</button>\n    })\n    \n    const handClickNext = () => {\n        if (numberOfQuestion == number) {\n            setQuestionNumber(numberOfQuestion);\n            setChoices(numberOfOptions);\n        } else {\n            setQuestionNumber(number + 1);\n            setChoices(choices + 1);\n        }\n\n    }\n    const handClickPrev = () => {\n        if (number == 1) {\n            setQuestionNumber(1);\n            setChoices(1);\n        } else {\n            setQuestionNumber(number - 1);\n            setChoices(choices - 1);\n        }\n\n    }\n\n\n    return (\n        <div className=\"container\">\n            <section className=\"form text-center\">\n                <hr />\n                {/*Question prompst*/}\n                <div className=\"text-center\">\n                    <h2 className=\"question border rounded-pill\">{questionDisplayed}</h2>\n                </div>\n\n                {/*Form input here*/}\n                <div>\n                    {allOptionsArray}\n                    \n                </div>\n\n                {/*Buttons at the bottem to navigate*/}\n                <div>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickPrev}>Prev</button>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Next</button>\n\n                    {/*Put in results page link*/}\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Results</button>\n                </div>\n                <div className=\"num-question\">\n                    {number}/{numberOfQuestion}\n\n                </div>\n            </section>\n        </div>\n    )\n\n\n\n}\n\n// function QuizOptions(props) {\n\n//     const options = props.options;\n\n//     const button = options.map((option) => {\n//         return <button className=\"qb btn btn-outline-dark btn-md\">{option}</button>\n//     })\n\n//     return(\n//         {button}\n//     )\n\n\n// }\n\n\n// <QuizOptions options = {optionsDisplayed}/>\n","/Users/amaraperry/Desktop/project-skincare-proposal/src/ProductComparison.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":18},{"ruleId":"66","severity":1,"message":"71","line":7,"column":8,"nodeType":"68","messageId":"69","endLine":7,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":25},{"ruleId":"66","severity":1,"message":"73","line":25,"column":16,"nodeType":"68","messageId":"69","endLine":25,"endColumn":24},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"66","severity":1,"message":"78","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":9},{"ruleId":"79","severity":1,"message":"80","line":25,"column":44,"nodeType":"81","messageId":"82","endLine":25,"endColumn":46},{"ruleId":"83","severity":1,"message":"84","line":33,"column":17,"nodeType":"85","endLine":33,"endColumn":54},{"ruleId":"86","severity":1,"message":"87","line":102,"column":29,"nodeType":"85","endLine":102,"endColumn":95},{"ruleId":"66","severity":1,"message":"88","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"78","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":9},{"ruleId":"66","severity":1,"message":"89","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":11},{"ruleId":"66","severity":1,"message":"90","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":16},{"ruleId":"66","severity":1,"message":"91","line":18,"column":11,"nodeType":"68","messageId":"69","endLine":18,"endColumn":20},{"ruleId":"66","severity":1,"message":"92","line":30,"column":11,"nodeType":"68","messageId":"69","endLine":30,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":42,"column":30,"nodeType":"95","messageId":"96","endLine":42,"endColumn":32},{"ruleId":"93","severity":1,"message":"94","line":52,"column":20,"nodeType":"95","messageId":"96","endLine":52,"endColumn":22},"no-unused-vars","'QuizTopPicks' is defined but never used.","Identifier","unusedVar","'Homepage' is defined but never used.","'QuizQuestions' is defined but never used.","'ComparisonTable' is defined but never used.","'newArray' is assigned a value but never used.","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'_' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Accordion' is defined but never used.","'App' is defined but never used.","'ReactDOM' is defined but never used.","'userInput' is assigned a value but never used.","'optionsDisplayed' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]