{"ast":null,"code":"var _jsxFileName = \"/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizQuestions() {\n  _s();\n\n  const question = [\"What is your skin type?\", \"What is your price range?\", \"What type of treatment are you looking for?\", \"What type of products are you looking for?\"];\n  const options = [[\"Oily\", \"Dry\", \"Combo\", \"Normal\"], [\"$\", \"$$\", \"$$$\", \"$$$$\"], [\"Facial\", \"Spot-treatment\", \"Peels\", \"Hydration\"], [\"Moisturizer\", \"Cleanser\", \"Toner\", \"Serum\"]];\n  const userInput = {\n    skin: '',\n    price: '',\n    treatment: '',\n    type: ''\n  }; //allChoices\n\n  const [choices, setChoices] = useState([]);\n  const numberOfOptions = options.length;\n  const optionsDisplayed = options[choices - 1]; //setting the question displayed\n\n  const numberOfQuestion = question.length;\n  const [number, setQuestionNumber] = useState(1);\n  const questionDisplayed = question[number - 1];\n\n  const handClickNext = () => {\n    if (numberOfQuestion == number) {\n      setQuestionNumber(numberOfQuestion);\n      setChoices(numberOfOptions);\n    } else {\n      setQuestionNumber(number + 1);\n      setChoices(choices + 1);\n    }\n  };\n\n  const handClickPrev = () => {\n    if (number == 1) {\n      setQuestionNumber(1);\n      setChoices(1);\n    } else {\n      setQuestionNumber(number - 1);\n      setChoices(choices - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"question border rounded-pill\",\n          children: questionDisplayed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(QuizOptions, {\n          options: questionDisplayed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          onClick: handClickPrev,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          onClick: handClickNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          onClick: handClickNext,\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"num-question\",\n        children: [number, \"/\", numberOfQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(QuizQuestions, \"5YhfGF7b5fzRf2Qvd6Sxo32xll8=\");\n\n_c = QuizQuestions;\n\nfunction QuizOptions(props) {\n  const options = props.options;\n  const button = options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"qb btn btn-outline-dark btn-md\",\n      children: option\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this);\n  });\n  return {\n    button\n  };\n}\n\n_c2 = QuizOptions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizQuestions\");\n$RefreshReg$(_c2, \"QuizOptions\");","map":{"version":3,"sources":["/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js"],"names":["useState","React","Accordion","_","App","ReactDOM","QuizQuestions","question","options","userInput","skin","price","treatment","type","choices","setChoices","numberOfOptions","length","optionsDisplayed","numberOfQuestion","number","setQuestionNumber","questionDisplayed","handClickNext","handClickPrev","QuizOptions","props","button","map","option"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\n\n\nexport default function QuizQuestions() {\n    const question = [\"What is your skin type?\", \"What is your price range?\", \"What type of treatment are you looking for?\", \"What type of products are you looking for?\"];\n\n    const options = [\n        [\"Oily\", \"Dry\", \"Combo\", \"Normal\"], \n        [\"$\", \"$$\", \"$$$\", \"$$$$\"], \n        [\"Facial\", \"Spot-treatment\", \"Peels\", \"Hydration\"], \n        [\"Moisturizer\", \"Cleanser\", \"Toner\", \"Serum\"]\n    ];\n\n    const userInput = {\n        skin: '',\n        price: '',\n        treatment: '',\n        type: ''\n    };\n\n    //allChoices\n    const [choices, setChoices] = useState([]);\n    \n    const numberOfOptions = options.length;\n\n    const optionsDisplayed = options[choices -1];\n\n\n    //setting the question displayed\n    const numberOfQuestion = question.length;\n\n    const [number, setQuestionNumber] = useState(1);\n\n    const questionDisplayed = question[number - 1];\n\n    const handClickNext = () => {\n        if (numberOfQuestion == number) {\n            setQuestionNumber(numberOfQuestion);\n            setChoices(numberOfOptions);\n        } else {\n            setQuestionNumber(number + 1);\n            setChoices(choices + 1);\n        }\n\n    }\n    const handClickPrev = () => {\n        if (number == 1) {\n            setQuestionNumber(1);\n            setChoices(1);\n        } else {\n            setQuestionNumber(number - 1);\n            setChoices(choices - 1);\n        }\n\n    }\n\n    return (\n        <div className=\"container\">\n            <section className=\"form text-center\">\n                <hr />\n                {/*Question prompst*/}\n                <div className=\"text-center\">\n                    <h2 class=\"question border rounded-pill\">{questionDisplayed}</h2>\n                </div>\n\n                {/*Form input here*/}\n                <div>\n                    <QuizOptions options = {questionDisplayed}/>\n                    \n                </div>\n\n                {/*Buttons at the bottem to navigate*/}\n                <div>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickPrev}>Prev</button>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Next</button>\n\n                    {/*Put in results page link*/}\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Results</button>\n                </div>\n                <div className=\"num-question\">\n                    {number}/{numberOfQuestion}\n\n                </div>\n            </section>\n        </div>\n    )\n\n\n\n}\n\nfunction QuizOptions(props) {\n\n    const options = props.options;\n\n    const button = options.map((option) => {\n        return <button className=\"qb btn btn-outline-dark btn-md\">{option}</button>\n    })\n\n    return(\n        {button}\n    )\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}