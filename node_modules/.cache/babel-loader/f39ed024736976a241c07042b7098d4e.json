{"ast":null,"code":"import _toConsumableArray from\"/Users/amaraperry/Desktop/project-skincare-proposal/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/amaraperry/Desktop/project-skincare-proposal/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Accordion from'react-bootstrap/Accordion';import _ from'lodash';// takes in entire props.data as props.data\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function SortFilter(props){var _ref,_ref2;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),valueSelected=_useState2[0],setValueSelected=_useState2[1];var handleValue=function handleValue(event){var num=event.target.value;if(num===\"\"){num=\"\";}setValueSelected(num);props.applySortCallback(num);};var categories=['Product Type','Skin Type','Ingredients'];var categoryTitleArray=categories.map(function(title){return/*#__PURE__*/_jsx(\"h3\",{className:\"category\",children:title});});var typeArray=props.data.map(function(obj){return obj.type;});var uniqueType=_toConsumableArray(new Set(typeArray));var skinArray=props.data.map(function(obj){return obj.skin;});var flattenSkin=(_ref=[]).concat.apply(_ref,_toConsumableArray(skinArray));var uniqueSkin=_toConsumableArray(new Set(flattenSkin));var otherArray=props.data.map(function(obj){return obj.other;});var flattenOther=(_ref2=[]).concat.apply(_ref2,_toConsumableArray(otherArray));var uniqueOther=_toConsumableArray(new Set(flattenOther));var checkboxforEach=function checkboxforEach(array){var typeCheckbox=array.map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"form-check\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",value:\"\",id:\"flexCheckDefault\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:item,children:item})]},index);});return typeCheckbox;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"header\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-header\",children:\"View the Award Winning Products List\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select form-select-sm d-inline-block\",\"aria-label\":\".form-select-sm example\",value:valueSelected,onChange:handleValue,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Sort\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"Price ($ to $$$)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"Price ($$$ to $)\"})]})]}),/*#__PURE__*/_jsx(Accordion,{defaultActiveKey:\"0\",flush:true,children:/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:\"0\",children:[/*#__PURE__*/_jsx(Accordion.Header,{children:\"Filter Products\"}),/*#__PURE__*/_jsxs(Accordion.Body,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"one-checkbox col-md-3\",children:[categoryTitleArray[0],checkboxforEach(uniqueType)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"one-checkbox col-md-3\",children:[categoryTitleArray[1],checkboxforEach(uniqueSkin)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"one-checkbox col-md-3\",children:[categoryTitleArray[2],checkboxforEach(uniqueOther)]})]})]})})]});}// concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\n// export function AllFilters(props) {\n//     const [checkbox, setCheckbox] = useState(false);\n//     let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n//     let categoryTitleArray = categories.map((title) => {\n//         return (<h3 className=\"category\">{title}</h3>)\n//     })\n//     let typeArray = props.data.map((obj) => {\n//         return obj.type;\n//     })\n//     let uniqueType = [...new Set(typeArray)]\n//     let skinArray = props.data.map((obj) => {\n//         return obj.skin;\n//     })\n//     let flattenSkin = [].concat(...skinArray)\n//     let uniqueSkin = [...new Set(flattenSkin)]\n//     let otherArray = props.data.map((obj) => {\n//         return obj.other;\n//     })\n//     let flattenOther = [].concat(...otherArray)\n//     let uniqueOther = [...new Set(flattenOther)]\n//     const handleCheckboxes = (event) => {\n//         let checked = event.target.checked;\n//         if (checked === true) {\n//             return setCheckbox(true);\n//         } else {\n//             return setCheckbox(false);\n//         }\n//     }\n//     let checkboxforEach = (array) => {\n//         let typeCheckbox = array.map((item, index) => {\n//             return (\n//                 <div className=\"form-check\" key={index}>\n//                     <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n//                     <label className=\"form-check-label\" htmlFor={item}>\n//                         {item}\n//                     </label>\n//                 </div>\n//             )\n//         })\n//         return typeCheckbox\n//     }\n//     return (\n//         <Accordion defaultActiveKey=\"0\" flush>\n//             <Accordion.Item eventKey=\"0\">\n//                 <Accordion.Header>Filter Products</Accordion.Header>\n//                 <Accordion.Body>\n//                     <div className=\"one-checkbox col-md-3\">\n//                         {categoryTitleArray[0]}\n//                         {checkboxforEach(uniqueType)}\n//                     </div>\n//                     <div className=\"one-checkbox col-md-3\">\n//                         {categoryTitleArray[1]}\n//                         {checkboxforEach(uniqueSkin)}\n//                     </div>\n//                     <div className=\"one-checkbox col-md-3\" >\n//                         {categoryTitleArray[2]}\n//                         {checkboxforEach(uniqueOther)}\n//                     </div>\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//         </Accordion>\n//     )\n// }","map":{"version":3,"sources":["/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js"],"names":["React","useState","Accordion","_","SortFilter","props","valueSelected","setValueSelected","handleValue","event","num","target","value","applySortCallback","categories","categoryTitleArray","map","title","typeArray","data","obj","type","uniqueType","Set","skinArray","skin","flattenSkin","concat","uniqueSkin","otherArray","other","flattenOther","uniqueOther","checkboxforEach","array","typeCheckbox","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\n\n\n// takes in entire props.data as props.data\nexport function SortFilter(props) {\n\n    const [valueSelected, setValueSelected] = useState(\"\");\n\n    const handleValue = (event) => {\n        let num = event.target.value;\n        if (num === \"\") {\n            num = \"\";\n        }\n        setValueSelected(num);\n        props.applySortCallback(num)\n    }\n\n\n    let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n\n    let categoryTitleArray = categories.map((title) => {\n        return (<h3 className=\"category\">{title}</h3>)\n    })\n\n    let typeArray = props.data.map((obj) => {\n        return obj.type;\n    })\n    let uniqueType = [...new Set(typeArray)]\n\n    let skinArray = props.data.map((obj) => {\n        return obj.skin;\n    })\n    let flattenSkin = [].concat(...skinArray)\n    let uniqueSkin = [...new Set(flattenSkin)]\n\n    let otherArray = props.data.map((obj) => {\n        return obj.other;\n    })\n    let flattenOther = [].concat(...otherArray)\n    let uniqueOther = [...new Set(flattenOther)]\n\n    let checkboxforEach = (array) => {\n        let typeCheckbox = array.map((item, index) => {\n            return (\n                <div className=\"form-check\" key={index}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n                    <label className=\"form-check-label\" htmlFor={item}>\n                        {item}\n                    </label>\n                </div>\n            )\n        })\n        return typeCheckbox\n    }\n\n    return (\n        <div>\n            <header className=\"text-center\">\n                <h1 className=\"page-header\">View the Award Winning Products List</h1>\n                <select className=\"form-select form-select-sm d-inline-block\" aria-label=\".form-select-sm example\"\n                    value={valueSelected} onChange={handleValue}>\n                    <option value=\"\">Sort</option>\n                    <option value=\"1\">Price ($ to $$$)</option>\n                    <option value=\"2\">Price ($$$ to $)</option>\n                </select>\n            </header>\n\n            <Accordion defaultActiveKey=\"0\" flush>\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Filter Products</Accordion.Header>\n                    <Accordion.Body>\n                        <div className=\"one-checkbox col-md-3\">\n                            {categoryTitleArray[0]}\n                            {checkboxforEach(uniqueType)}\n                        </div>\n                        <div className=\"one-checkbox col-md-3\">\n                            {categoryTitleArray[1]}\n                            {checkboxforEach(uniqueSkin)}\n                        </div>\n                        <div className=\"one-checkbox col-md-3\" >\n                            {categoryTitleArray[2]}\n                            {checkboxforEach(uniqueOther)}\n                        </div>\n                    </Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n        </div>\n\n    )\n\n}\n\n// concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\n// export function AllFilters(props) {\n\n//     const [checkbox, setCheckbox] = useState(false);\n\n//     let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n\n//     let categoryTitleArray = categories.map((title) => {\n//         return (<h3 className=\"category\">{title}</h3>)\n//     })\n\n//     let typeArray = props.data.map((obj) => {\n//         return obj.type;\n//     })\n//     let uniqueType = [...new Set(typeArray)]\n\n//     let skinArray = props.data.map((obj) => {\n//         return obj.skin;\n//     })\n//     let flattenSkin = [].concat(...skinArray)\n//     let uniqueSkin = [...new Set(flattenSkin)]\n\n\n//     let otherArray = props.data.map((obj) => {\n//         return obj.other;\n//     })\n//     let flattenOther = [].concat(...otherArray)\n//     let uniqueOther = [...new Set(flattenOther)]\n\n//     const handleCheckboxes = (event) => {\n//         let checked = event.target.checked;\n//         if (checked === true) {\n//             return setCheckbox(true);\n//         } else {\n//             return setCheckbox(false);\n//         }\n//     }\n\n//     let checkboxforEach = (array) => {\n//         let typeCheckbox = array.map((item, index) => {\n//             return (\n//                 <div className=\"form-check\" key={index}>\n//                     <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n//                     <label className=\"form-check-label\" htmlFor={item}>\n//                         {item}\n//                     </label>\n//                 </div>\n//             )\n//         })\n//         return typeCheckbox\n//     }\n\n//     return (\n\n//         <Accordion defaultActiveKey=\"0\" flush>\n//             <Accordion.Item eventKey=\"0\">\n//                 <Accordion.Header>Filter Products</Accordion.Header>\n//                 <Accordion.Body>\n//                     <div className=\"one-checkbox col-md-3\">\n//                         {categoryTitleArray[0]}\n//                         {checkboxforEach(uniqueType)}\n//                     </div>\n//                     <div className=\"one-checkbox col-md-3\">\n//                         {categoryTitleArray[1]}\n//                         {checkboxforEach(uniqueSkin)}\n//                     </div>\n//                     <div className=\"one-checkbox col-md-3\" >\n//                         {categoryTitleArray[2]}\n//                         {checkboxforEach(uniqueOther)}\n//                     </div>\n//                 </Accordion.Body>\n//             </Accordion.Item>\n//         </Accordion>\n\n//     )\n// }\n"]},"metadata":{},"sourceType":"module"}