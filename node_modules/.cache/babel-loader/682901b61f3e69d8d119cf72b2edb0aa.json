{"ast":null,"code":"var _jsxFileName = \"/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js\",\n    _s = $RefreshSig$();\n\nimport { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\"; // takes in entire props.data as props.data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Sort(props) {\n  _s();\n\n  const [valueSelected, setValueSelected] = useState(\"\");\n\n  const handleValue = event => {\n    let value = event.target.value;\n\n    if (value === \"\") {\n      value = \"\";\n    }\n\n    return setValueSelected(value);\n  };\n\n  const handleClick = () => {\n    props.applyCallback(valueSelected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-header\",\n      children: \"View the Award Winning Products List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select form-select-sm d-inline-block\",\n      \"aria-label\": \".form-select-sm example\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        onClick: handleClick,\n        children: \"Price ($ to $$$)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2\",\n        onClick: handleClick,\n        children: \"Price ($$$ to $)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n} // concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\n\n_s(Sort, \"/GessdbZkARVxDuuDHdBrPB5qMQ=\");\n\n_c = Sort;\nexport function AllFilters(props) {\n  let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n  let categoryTitleArray = categories.map(title => {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this);\n  });\n  let typeArray = props.data.map(obj => {\n    return obj.type;\n  });\n  let uniqueType = [...new Set(typeArray)];\n  let skinArray = props.data.map(obj => {\n    return obj.skin;\n  });\n  let flattenSkin = [].concat(...skinArray);\n  let uniqueSkin = [...new Set(flattenSkin)];\n  let otherArray = props.data.map(obj => {\n    return obj.other;\n  });\n  let flattenOther = [].concat(...otherArray);\n  let uniqueOther = [...new Set(flattenOther)];\n\n  let checkboxforEach = array => {\n    let typeCheckbox = array.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: \"\",\n          id: \"flexCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: item,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this);\n    });\n    return typeCheckbox;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    flush: true,\n    children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: \"Filter Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-checkbox col-md-3\",\n          children: [categoryTitleArray[0], checkboxforEach(uniqueType)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-checkbox col-md-3\",\n          children: [categoryTitleArray[1], checkboxforEach(uniqueSkin)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-checkbox col-md-3\",\n          children: [categoryTitleArray[2], checkboxforEach(uniqueOther)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_c2 = AllFilters;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sort\");\n$RefreshReg$(_c2, \"AllFilters\");","map":{"version":3,"sources":["/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js"],"names":["useState","React","Accordion","_","App","Sort","props","valueSelected","setValueSelected","handleValue","event","value","target","handleClick","applyCallback","AllFilters","categories","categoryTitleArray","map","title","typeArray","data","obj","type","uniqueType","Set","skinArray","skin","flattenSkin","concat","uniqueSkin","otherArray","other","flattenOther","uniqueOther","checkboxforEach","array","typeCheckbox","item","index"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\n\n\n// takes in entire props.data as props.data\nexport function Sort(props) {\n\n    const [valueSelected, setValueSelected] = useState(\"\");\n\n    const handleValue = (event) => {\n        let value = event.target.value;\n        if (value === \"\") {\n            value = \"\";\n        }\n        return setValueSelected(value)\n    }\n\n    const handleClick = () => {\n        props.applyCallback(valueSelected);\n    }\n\n    return (\n        <header className=\"text-center\">\n            <h1 className=\"page-header\">View the Award Winning Products List</h1>\n            <select className=\"form-select form-select-sm d-inline-block\" aria-label=\".form-select-sm example\">\n                <option value=\"\">Sort</option>\n                <option value=\"1\" onClick={handleClick}>Price ($ to $$$)</option>\n                <option value=\"2\" onClick={handleClick}>Price ($$$ to $)</option>\n            </select>\n        </header>\n    )\n\n}\n\n// concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\nexport function AllFilters(props) {\n\n\n    let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n\n    let categoryTitleArray = categories.map((title) => {\n        return (<h3 className=\"category\">{title}</h3>)\n    })\n\n    let typeArray = props.data.map((obj) => {\n        return obj.type;\n    })\n    let uniqueType = [...new Set(typeArray)]\n\n    let skinArray = props.data.map((obj) => {\n        return obj.skin;\n    })\n    let flattenSkin = [].concat(...skinArray)\n    let uniqueSkin = [...new Set(flattenSkin)]\n\n\n    let otherArray = props.data.map((obj) => {\n        return obj.other;\n    })\n    let flattenOther = [].concat(...otherArray)\n    let uniqueOther = [...new Set(flattenOther)]\n\n\n    let checkboxforEach = (array) => {\n        let typeCheckbox = array.map((item, index) => {\n            return (\n                <div className=\"form-check\" key={index}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n                    <label className=\"form-check-label\" htmlFor={item}>\n                        {item}\n                    </label>\n                </div>\n            )\n        })\n        return typeCheckbox\n    }\n\n    return (\n\n        <Accordion defaultActiveKey=\"0\" flush>\n            <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>Filter Products</Accordion.Header>\n                <Accordion.Body>\n                    <div className=\"one-checkbox col-md-3\">\n                        {categoryTitleArray[0]}\n                        {checkboxforEach(uniqueType)}\n                    </div>\n                    <div className=\"one-checkbox col-md-3\">\n                        {categoryTitleArray[1]}\n                        {checkboxforEach(uniqueSkin)}\n                    </div>\n                    <div className=\"one-checkbox col-md-3\" >\n                        {categoryTitleArray[2]}\n                        {checkboxforEach(uniqueOther)}\n                    </div>\n\n\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}