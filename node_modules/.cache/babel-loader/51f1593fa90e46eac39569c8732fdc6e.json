{"ast":null,"code":"import _slicedToArray from\"/Users/amaraperry/Desktop/project-skincare-proposal/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,React}from\"react\";import Accordion from'react-bootstrap/Accordion';import _ from'lodash';import App from\"./App\";import ReactDOM from'react-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function QuizQuestions(){var question=[\"What is your skin type?\",\"What is your price range?\",\"What type of treatment are you looking for?\",\"What type of products are you looking for?\"];var options=[[\"Oily\",\"Dry\",\"Combination\",\"Normal\"],[\"$\",\"$$\",\"$$$\",\"$$$$\"],[\"Moisturizer\",\"Cleanser\",\"Toner\",\"Serum\"],[\"Paraben-free\",\"Fragrance-free\",\"Cruelty-free\",\"Vegan\",\"Hypoallergenic\"]];var userInput={skin:'',price:'',treatment:'',type:''};//allChoices\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),choices=_useState2[0],setChoices=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),number=_useState4[0],setQuestionNumber=_useState4[1];var numberOfOptions=options.length;var optionsDisplayed=options[choices-1];//setting the question displayed\nvar numberOfQuestion=question.length;var questionDisplayed=question[number-1];var allOptionsArray=options.map(function(option){return/*#__PURE__*/_jsx(\"button\",{className:\"qb btn btn-outline-dark btn-md\",children:option},option);});var handClickNext=function handClickNext(){if(numberOfQuestion==number){setQuestionNumber(numberOfQuestion);setChoices(numberOfOptions);}else{setQuestionNumber(number+1);setChoices(choices+1);}};var handClickPrev=function handClickPrev(){if(number==1){setQuestionNumber(1);setChoices(1);}else{setQuestionNumber(number-1);setChoices(choices-1);}};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"form text-center\",children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"question border rounded-pill\",children:questionDisplayed})}),/*#__PURE__*/_jsx(\"div\",{children:allOptionsArray}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark btn-lg\",onClick:handClickPrev,children:\"Prev\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark btn-lg\",onClick:handClickNext,children:\"Next\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark btn-lg\",onClick:handClickNext,children:\"Results\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"num-question\",children:[number,\"/\",numberOfQuestion]})]})});}// function QuizOptions(props) {\n//     const options = props.options;\n//     const button = options.map((option) => {\n//         return <button className=\"qb btn btn-outline-dark btn-md\">{option}</button>\n//     })\n//     return(\n//         {button}\n//     )\n// }\n// <QuizOptions options = {optionsDisplayed}/>","map":{"version":3,"sources":["/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js"],"names":["useState","React","Accordion","_","App","ReactDOM","QuizQuestions","question","options","userInput","skin","price","treatment","type","choices","setChoices","number","setQuestionNumber","numberOfOptions","length","optionsDisplayed","numberOfQuestion","questionDisplayed","allOptionsArray","map","option","handClickNext","handClickPrev"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\n\n\nexport default function QuizQuestions() {\n    const question = [\"What is your skin type?\", \"What is your price range?\", \"What type of treatment are you looking for?\", \"What type of products are you looking for?\"];\n\n    const options = [\n        [\"Oily\", \"Dry\", \"Combination\", \"Normal\"], \n        [\"$\", \"$$\", \"$$$\", \"$$$$\"], \n        [\"Moisturizer\", \"Cleanser\", \"Toner\", \"Serum\"],\n        [\"Paraben-free\", \"Fragrance-free\", \"Cruelty-free\", \"Vegan\", \"Hypoallergenic\"]\n    ];\n\n    const userInput = {\n        skin: '',\n        price: '',\n        treatment: '',\n        type: ''\n    };\n\n    //allChoices\n    const [choices, setChoices] = useState([]);\n    const [number, setQuestionNumber] = useState(1);\n    \n    const numberOfOptions = options.length;\n    const optionsDisplayed = options[choices -1];\n\n    //setting the question displayed\n    const numberOfQuestion = question.length;\n    const questionDisplayed = question[number - 1];\n    \n    \n    let allOptionsArray = options.map((option) => {\n        return <button className=\"qb btn btn-outline-dark btn-md\" key={option}>{option}</button>\n    })\n    \n    const handClickNext = () => {\n        if (numberOfQuestion == number) {\n            setQuestionNumber(numberOfQuestion);\n            setChoices(numberOfOptions);\n        } else {\n            setQuestionNumber(number + 1);\n            setChoices(choices + 1);\n        }\n\n    }\n    const handClickPrev = () => {\n        if (number == 1) {\n            setQuestionNumber(1);\n            setChoices(1);\n        } else {\n            setQuestionNumber(number - 1);\n            setChoices(choices - 1);\n        }\n\n    }\n\n\n    return (\n        <div className=\"container\">\n            <section className=\"form text-center\">\n                <hr />\n                {/*Question prompst*/}\n                <div className=\"text-center\">\n                    <h2 className=\"question border rounded-pill\">{questionDisplayed}</h2>\n                </div>\n\n                {/*Form input here*/}\n                <div>\n                    {allOptionsArray}\n                    \n                </div>\n\n                {/*Buttons at the bottem to navigate*/}\n                <div>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickPrev}>Prev</button>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Next</button>\n\n                    {/*Put in results page link*/}\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Results</button>\n                </div>\n                <div className=\"num-question\">\n                    {number}/{numberOfQuestion}\n\n                </div>\n            </section>\n        </div>\n    )\n\n\n\n}\n\n// function QuizOptions(props) {\n\n//     const options = props.options;\n\n//     const button = options.map((option) => {\n//         return <button className=\"qb btn btn-outline-dark btn-md\">{option}</button>\n//     })\n\n//     return(\n//         {button}\n//     )\n\n\n// }\n\n\n// <QuizOptions options = {optionsDisplayed}/>\n"]},"metadata":{},"sourceType":"module"}