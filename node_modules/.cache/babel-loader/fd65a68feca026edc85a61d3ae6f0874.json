{"ast":null,"code":"var _jsxFileName = \"/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js\",\n    _s = $RefreshSig$();\n\nimport { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuizQuestions() {\n  _s();\n\n  const question = [\"What is your skin type?\", \"What is your price range?\", \"What type of treatment are you looking for?\", \"What type of products are you looking for?\"];\n  const options = [[\"Oily\", \"Dry\", \"Combination\", \"Normal\"], [\"$\", \"$$\", \"$$$\", \"$$$$\"], [\"Moisturizer\", \"Cleanser\", \"Toner\", \"Serum\"], [\"Paraben-free\", \"Fragrance-free\", \"Cruelty-free\", \"Vegan\", \"Hypoallergenic\"]];\n  const userInput = {\n    skin: '',\n    price: '',\n    treatment: '',\n    type: ''\n  }; //allChoices\n\n  const [choices, setChoices] = useState([]);\n  const [number, setQuestionNumber] = useState(1);\n  const numberOfOptions = options.length;\n  const optionsDisplayed = options[choices - 1]; //setting the question displayed\n\n  const numberOfQuestion = question.length;\n  const questionDisplayed = question[number - 1];\n  let allOptionsArray = options.map(option => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"qb btn btn-outline-dark btn-md\",\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  });\n\n  const handClickNext = () => {\n    if (numberOfQuestion == number) {\n      setQuestionNumber(numberOfQuestion);\n      setChoices(numberOfOptions);\n    } else {\n      setQuestionNumber(number + 1);\n      setChoices(choices + 1);\n    }\n  };\n\n  const handClickPrev = () => {\n    if (number == 1) {\n      setQuestionNumber(1);\n      setChoices(1);\n    } else {\n      setQuestionNumber(number - 1);\n      setChoices(choices - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"question border rounded-pill\",\n          children: questionDisplayed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allOptionsArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          onClick: handClickPrev,\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          onClick: handClickNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-lg\",\n          onClick: handClickNext,\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"num-question\",\n        children: [number, \"/\", numberOfQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n} // function QuizOptions(props) {\n//     const options = props.options;\n//     const button = options.map((option) => {\n//         return <button className=\"qb btn btn-outline-dark btn-md\">{option}</button>\n//     })\n//     return(\n//         {button}\n//     )\n// }\n// <QuizOptions options = {optionsDisplayed}/>\n\n_s(QuizQuestions, \"5YhfGF7b5fzRf2Qvd6Sxo32xll8=\");\n\n_c = QuizQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestions\");","map":{"version":3,"sources":["/Users/amaraperry/Desktop/project-skincare-proposal/src/QuizQuestions.js"],"names":["useState","React","Accordion","_","App","ReactDOM","QuizQuestions","question","options","userInput","skin","price","treatment","type","choices","setChoices","number","setQuestionNumber","numberOfOptions","length","optionsDisplayed","numberOfQuestion","questionDisplayed","allOptionsArray","map","option","handClickNext","handClickPrev"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\n\n\nexport default function QuizQuestions() {\n    const question = [\"What is your skin type?\", \"What is your price range?\", \"What type of treatment are you looking for?\", \"What type of products are you looking for?\"];\n\n    const options = [\n        [\"Oily\", \"Dry\", \"Combination\", \"Normal\"], \n        [\"$\", \"$$\", \"$$$\", \"$$$$\"], \n        [\"Moisturizer\", \"Cleanser\", \"Toner\", \"Serum\"],\n        [\"Paraben-free\", \"Fragrance-free\", \"Cruelty-free\", \"Vegan\", \"Hypoallergenic\"]\n    ];\n\n    const userInput = {\n        skin: '',\n        price: '',\n        treatment: '',\n        type: ''\n    };\n\n    //allChoices\n    const [choices, setChoices] = useState([]);\n    const [number, setQuestionNumber] = useState(1);\n    \n    const numberOfOptions = options.length;\n    const optionsDisplayed = options[choices -1];\n\n    //setting the question displayed\n    const numberOfQuestion = question.length;\n    const questionDisplayed = question[number - 1];\n    \n    \n    let allOptionsArray = options.map((option) => {\n        return <button className=\"qb btn btn-outline-dark btn-md\" key={option}>{option}</button>\n    })\n    \n    const handClickNext = () => {\n        if (numberOfQuestion == number) {\n            setQuestionNumber(numberOfQuestion);\n            setChoices(numberOfOptions);\n        } else {\n            setQuestionNumber(number + 1);\n            setChoices(choices + 1);\n        }\n\n    }\n    const handClickPrev = () => {\n        if (number == 1) {\n            setQuestionNumber(1);\n            setChoices(1);\n        } else {\n            setQuestionNumber(number - 1);\n            setChoices(choices - 1);\n        }\n\n    }\n\n\n    return (\n        <div className=\"container\">\n            <section className=\"form text-center\">\n                <hr />\n                {/*Question prompst*/}\n                <div className=\"text-center\">\n                    <h2 className=\"question border rounded-pill\">{questionDisplayed}</h2>\n                </div>\n\n                {/*Form input here*/}\n                <div>\n                    {allOptionsArray}\n                    \n                </div>\n\n                {/*Buttons at the bottem to navigate*/}\n                <div>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickPrev}>Prev</button>\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Next</button>\n\n                    {/*Put in results page link*/}\n                    <button className=\"btn btn-outline-dark btn-lg\" onClick={handClickNext}>Results</button>\n                </div>\n                <div className=\"num-question\">\n                    {number}/{numberOfQuestion}\n\n                </div>\n            </section>\n        </div>\n    )\n\n\n\n}\n\n// function QuizOptions(props) {\n\n//     const options = props.options;\n\n//     const button = options.map((option) => {\n//         return <button className=\"qb btn btn-outline-dark btn-md\">{option}</button>\n//     })\n\n//     return(\n//         {button}\n//     )\n\n\n// }\n\n\n// <QuizOptions options = {optionsDisplayed}/>\n"]},"metadata":{},"sourceType":"module"}