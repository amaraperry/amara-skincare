{"ast":null,"code":"var _jsxFileName = \"/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash'; // takes in entire props.data as props.data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SortFilter(props) {\n  _s();\n\n  const [valueSelected, setValueSelected] = useState(\"\");\n\n  const handleValue = event => {\n    let num = event.target.value;\n\n    if (num === \"\") {\n      num = \"\";\n    }\n\n    setValueSelected(num);\n    props.applyCallback(num);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-header\",\n        children: \"View the Award Winning Products List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select form-select-sm d-inline-block\",\n        \"aria-label\": \".form-select-sm example\",\n        value: valueSelected,\n        onChange: handleValue,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Price ($ to $$$)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"Price ($$$ to $)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      flush: true,\n      children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: \"0\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: \"Filter Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"one-checkbox col-md-3\",\n            children: [categoryTitleArray[0], checkboxforEach(uniqueType)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"one-checkbox col-md-3\",\n            children: [categoryTitleArray[1], checkboxforEach(uniqueSkin)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"one-checkbox col-md-3\",\n            children: [categoryTitleArray[2], checkboxforEach(uniqueOther)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n} // concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\n\n_s(SortFilter, \"/GessdbZkARVxDuuDHdBrPB5qMQ=\");\n\n_c = SortFilter;\nexport function AllFilters(props) {\n  _s2();\n\n  const [checkbox, setCheckbox] = useState(false);\n  let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n  let categoryTitleArray = categories.map(title => {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"category\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this);\n  });\n  let typeArray = props.data.map(obj => {\n    return obj.type;\n  });\n  let uniqueType = [...new Set(typeArray)];\n  let skinArray = props.data.map(obj => {\n    return obj.skin;\n  });\n  let flattenSkin = [].concat(...skinArray);\n  let uniqueSkin = [...new Set(flattenSkin)];\n  let otherArray = props.data.map(obj => {\n    return obj.other;\n  });\n  let flattenOther = [].concat(...otherArray);\n  let uniqueOther = [...new Set(flattenOther)];\n\n  const handleCheckboxes = event => {\n    let checked = event.target.checked;\n\n    if (checked === true) {\n      return setCheckbox(true);\n    } else {\n      return setCheckbox(false);\n    }\n  };\n\n  let checkboxforEach = array => {\n    let typeCheckbox = array.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: \"\",\n          id: \"flexCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: item,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this);\n    });\n    return typeCheckbox;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    flush: true,\n    children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n      eventKey: \"0\",\n      children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n        children: \"Filter Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-checkbox col-md-3\",\n          children: [categoryTitleArray[0], checkboxforEach(uniqueType)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-checkbox col-md-3\",\n          children: [categoryTitleArray[1], checkboxforEach(uniqueSkin)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one-checkbox col-md-3\",\n          children: [categoryTitleArray[2], checkboxforEach(uniqueOther)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(AllFilters, \"kZULX7RCU4QgEZ2Nk1V27sHaOFU=\");\n\n_c2 = AllFilters;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortFilter\");\n$RefreshReg$(_c2, \"AllFilters\");","map":{"version":3,"sources":["/Users/amaraperry/Desktop/project-skincare-proposal/src/SortFilter.js"],"names":["useState","React","Accordion","_","SortFilter","props","valueSelected","setValueSelected","handleValue","event","num","target","value","applyCallback","categoryTitleArray","checkboxforEach","uniqueType","uniqueSkin","uniqueOther","AllFilters","checkbox","setCheckbox","categories","map","title","typeArray","data","obj","type","Set","skinArray","skin","flattenSkin","concat","otherArray","other","flattenOther","handleCheckboxes","checked","array","typeCheckbox","item","index"],"mappings":"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","sourcesContent":["import { useState, React } from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport _ from 'lodash';\n\n\n// takes in entire props.data as props.data\nexport function SortFilter(props) {\n\n    const [valueSelected, setValueSelected] = useState(\"\");\n\n    const handleValue = (event) => {\n        let num = event.target.value;\n        if (num === \"\") {\n            num = \"\";\n        } \n        setValueSelected(num);\n        props.applyCallback(num);\n    }\n\n    return (\n        <div>\n        <header className=\"text-center\">\n            <h1 className=\"page-header\">View the Award Winning Products List</h1>\n            <select className=\"form-select form-select-sm d-inline-block\" aria-label=\".form-select-sm example\"\n            value={valueSelected} onChange={handleValue}>\n                <option value=\"\">Sort</option>\n                <option value=\"1\">Price ($ to $$$)</option>\n                <option value=\"2\">Price ($$$ to $)</option>\n            </select>\n        </header>\n\n<Accordion defaultActiveKey=\"0\" flush>\n<Accordion.Item eventKey=\"0\">\n    <Accordion.Header>Filter Products</Accordion.Header>\n    <Accordion.Body>\n        <div className=\"one-checkbox col-md-3\">\n            {categoryTitleArray[0]}\n            {checkboxforEach(uniqueType)}\n        </div>\n        <div className=\"one-checkbox col-md-3\">\n            {categoryTitleArray[1]}\n            {checkboxforEach(uniqueSkin)}\n        </div>\n        <div className=\"one-checkbox col-md-3\" >\n            {categoryTitleArray[2]}\n            {checkboxforEach(uniqueOther)}\n        </div>\n    </Accordion.Body>\n</Accordion.Item>\n</Accordion>\n</div>\n\n    )\n\n}\n\n// concatenate into one array: map((e, i) => e + array2[i]); console. log(newArray);\n// takes in props.data, which is entire data set, as dataset={props.data}\nexport function AllFilters(props) {\n\n    const[checkbox, setCheckbox] = useState(false);\n\n    let categories = ['Product Type', 'Skin Type', 'Ingredients'];\n\n    let categoryTitleArray = categories.map((title) => {\n        return (<h3 className=\"category\">{title}</h3>)\n    })\n\n    let typeArray = props.data.map((obj) => {\n        return obj.type;\n    })\n    let uniqueType = [...new Set(typeArray)]\n\n    let skinArray = props.data.map((obj) => {\n        return obj.skin;\n    })\n    let flattenSkin = [].concat(...skinArray)\n    let uniqueSkin = [...new Set(flattenSkin)]\n\n\n    let otherArray = props.data.map((obj) => {\n        return obj.other;\n    })\n    let flattenOther = [].concat(...otherArray)\n    let uniqueOther = [...new Set(flattenOther)]\n\n    const handleCheckboxes = (event) => {\n        let checked = event.target.checked;\n        if (checked === true) {\n            return setCheckbox(true);\n        } else {\n            return setCheckbox(false);\n        }\n    }\n\n    let checkboxforEach = (array) => {\n        let typeCheckbox = array.map((item, index) => {\n            return (\n                <div className=\"form-check\" key={index}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" />\n                    <label className=\"form-check-label\" htmlFor={item}>\n                        {item}\n                    </label>\n                </div>\n            )\n        })\n        return typeCheckbox\n    }\n\n    return (\n\n        <Accordion defaultActiveKey=\"0\" flush>\n            <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>Filter Products</Accordion.Header>\n                <Accordion.Body>\n                    <div className=\"one-checkbox col-md-3\">\n                        {categoryTitleArray[0]}\n                        {checkboxforEach(uniqueType)}\n                    </div>\n                    <div className=\"one-checkbox col-md-3\">\n                        {categoryTitleArray[1]}\n                        {checkboxforEach(uniqueSkin)}\n                    </div>\n                    <div className=\"one-checkbox col-md-3\" >\n                        {categoryTitleArray[2]}\n                        {checkboxforEach(uniqueOther)}\n                    </div>\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}